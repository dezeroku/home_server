alertmanager:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,192.168.1.0/24"
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - alertmanager"
      nginx.ingress.kubernetes.io/auth-secret: alertmanager-ingress-basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
    enabled: true
    ingressClassName: nginx
    hosts:
      - alertmanager.{{ requiredEnv "DOMAIN" }}
    paths:
      - /
    pathType: ImplementationSpecific
    tls:
      - secretName: alertmanager-general-tls
        hosts:
          - alertmanager.{{ requiredEnv "DOMAIN" }}

  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi

grafana:
  admin:
    existingSecret: "grafana-admin-credentials"
    userKey: admin-username
    passwordKey: admin-password
  defaultDashboardsTimezone: Europe/Warsaw
  plugins:
    - grafana-piechart-panel
  #grafana.ini:
  #  auth.anonymous:
  #    enabled: true
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,192.168.1.0/24"
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana.{{ requiredEnv "DOMAIN" }}
    paths:
      - /
    pathType: ImplementationSpecific
    tls:
      - secretName: grafana-general-tls
        hosts:
          - grafana.{{ requiredEnv "DOMAIN" }}

prometheus:
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-dns-prod"
      nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,192.168.1.0/24"
      nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - prometheus"
      nginx.ingress.kubernetes.io/auth-secret: prometheus-ingress-basic-auth
      nginx.ingress.kubernetes.io/auth-type: basic
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.{{ requiredEnv "DOMAIN" }}
    paths:
      - /
    pathType: ImplementationSpecific
    tls:
      - secretName: prometheus-general-tls
        hosts:
          - prometheus.{{ requiredEnv "DOMAIN" }}

  prometheusSpec:
    # Search for service monitors outside of its own namespace
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false

    retention: 360d
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 150Gi
    additionalScrapeConfigs:
      - job_name: node-exporter
        static_configs:
          - targets: ['devserver.lan:9100']
          - targets: ['dezeroku-desktop.lan:9100']
